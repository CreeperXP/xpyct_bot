from webserver import keep_alive
import os
try:
    import nextcord
except ImportError:
    print("Trying to Install required module: nextcord[voice]\n")
    os.system("python -m pip install nextcord[voice]")
import nextcord
from nextcord.ext import commands
import json
import requests
import random
import asyncio
from urllib.parse import quote_plus
from speedtest import Speedtest
import string
import datetime
from discord_together import DiscordTogether


def get_prefix(bot, message):
    with open("prefix.json", "r") as f:
        prefix = json.load(f)
    return prefix[str(message.guild.id)]


PREFIX = "$"
intents = nextcord.Intents().all()
bot = commands.Bot(command_prefix=get_prefix, intents=intents) 
bot.remove_command("help")

version = "Bot v2.4"


@bot.event
async def on_guild_join(guild):
    with open("prefix.json", "r") as f:
        prefix = json.load(f)
    prefix[str(guild.id)] = "$"
    with open("prefix.json", "w") as f:
        json.dump(prefix, f, indent=4)

@bot.event
async def on_guild_remove(guild):
    with open("prefix.json", "r") as f:
        prefix = json.load(f)
    prefix.pop(str(guild.id))
    with open("prefix.json", "w") as f:
        json.dump(prefix, f, indent=4)

@bot.event
async def on_message(message):
    if {i.lower().translate(str.maketrans('','', string. punctuation)) for i in message.content.split(' ')}\
    .intersection(set(json.load(open('cenz.json')))) != set():
        await message.channel.send(f'{message.author.mention}, yyy‚Ä¶ –∫–æ–≥–æ –ø–æ –≥—É–±–∞–º –æ—Ç—à–ª–µ–ø–∞—Ç—å??')
        await message.delete()
    
    await bot.process_commands(message)

@bot.command()
@commands.has_permissions(administrator=True)
async def setprefix(ctx, new: str):
    with open("prefix.json", "r") as f:
        prefix = json.load(f)
    prefix[str(ctx.guild.id)] = new
    with open("prefix.json", "w") as f:
        json.dump(prefix, f, indent=4)
    await ctx.send(f"–ù–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å `{new}`")


@bot.event
async def on_ready():
    bot.togetherControl = await DiscordTogether("DISCORD_TOKEN")
    print(f"Bot logged as {bot.user} | {version}")
    await bot.change_presence(
        status=nextcord.Status.online, activity=nextcord.Game("$help")
    )


@bot.command(pass_context=True)
async def help(ctx):
    author = ctx.message.author

    test_e = nextcord.Embed(
        colour=nextcord.Colour.orange()
    )
    test_e.set_author(name=f"–ú–æ–∏ –∫–æ–º–∞–Ω–¥—ã:")
    test_e.add_field(name="help", value="–ü–æ–º–æ—â—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏", inline=False)
    test_e.add_field(name="ping", value="–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–∏–Ω–≥–∞")
    test_e.add_field(name="clear", value="(–õ–∏–±–æ purge –∏–ª–∏ clean) –æ—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞")
    test_e.add_field(name="hello", value="–ë–æ—Ç –ø–æ–∑–¥–æ—Ä–æ–≤–∞–µ—Ç—Å—è —Å –≤–∞–º–∏")
    test_e.add_field(name="github", value="–°—Å—ã–ª–∫–∞ –Ω–∞ –º–æ–π GitHub")
    test_e.add_field(name="ver", value="–í–µ—Ä—Å–∏—è –±–æ—Ç–∞")
    test_e.add_field(name="say", value="–ü–µ—Ä–µ—Å–∫–∞–∑—ã–≤–∞–Ω–∏–µ —á–µ–≥–æ-–ª–∏–±–æ –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞")
    test_e.add_field(name="serverinfo", value="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ")
    test_e.add_field(name="send_m", value="–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –õ–° –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞")
    test_e.add_field(name="nitro", value="NOT a free nitro")
    test_e.add_field(name="guess", value="–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ")
    test_e.add_field(name="–º–æ–Ω–µ—Ç–∞", value="–û—Ä—ë–ª –∏–ª–∏ –†–µ—à–∫–∞?")
    test_e.add_field(name="play", value="–ò–≥—Ä–∞–µ—Ç –º—É–∑—ã–∫—É. –ü—Ä–∏–º–µ—Ä: $play Never Gonna Give You Up")
    test_e.add_field(name="loop", value="–°—Ç–∞–≤–∏—Ç –ø–æ–≤—Ç–æ—Ä –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è")
    test_e.add_field(name="stop", value="–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è (–ù–ï –ü–ê–£–ó–ê)")
    test_e.add_field(name="pause", value="–°—Ç–∞–≤–∏—Ç –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–∞ –ø–∞—É–∑—É")

    await ctx.reply("–Ø –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ —Ç–µ–±–µ –≤ –õ–°", delete_after=5.0)
    await author.send(embed=test_e)


@bot.command(
    aliases=[
        "Ping",
        "PING",
        "pING",
        "ping",
        "–ü–∏–Ω–≥",
        "–ü–ò–ù–ì",
        "–ø–ò–ù–ì",
        "–ø–∏–Ω–≥",
        "–ü–æ–Ω–≥",
        "–ü–û–ù–ì",
        "–ø–û–ù–ì",
        "–ø–æ–Ω–≥",
    ]
)
async def __ping(
    ctx,
):  # –û–±—ä—è–≤–ª–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ __ping —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
    ping = bot.ws.latency  # –ü–æ–ª—É—á–∞–µ–º –ø–∏–Ω–≥ –∫–ª–∏–µ–Ω—Ç–∞

    ping_emoji = "üü©üî≥üî≥üî≥üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –º–µ–Ω—å—à–µ 100ms

    if ping > 0.10000000000000000:
        ping_emoji = "üüßüü©üî≥üî≥üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 100ms

    if ping > 0.15000000000000000:
        ping_emoji = "üü•üüßüü©üî≥üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 150ms

    if ping > 0.20000000000000000:
        ping_emoji = "üü•üü•üüßüü©üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 200ms

    if ping > 0.25000000000000000:
        ping_emoji = "üü•üü•üü•üüßüü©"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 250ms

    if ping > 0.30000000000000000:
        ping_emoji = "üü•üü•üü•üü•üüß"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 300ms

    if ping > 0.35000000000000000:
        ping_emoji = "üü•üü•üü•üü•üü•"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 350ms

    message = await ctx.send(
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. . ."
    )  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è message —Å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
    await message.edit(
        content=f"–ü–æ–Ω–≥! {ping_emoji} `{ping * 1000:.0f}ms` :ping_pong:"
    )  # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∏—Ç–æ–≥–æ–≤–æ–µ (–ù–∞ —Å–∞–º –ø–∏–Ω–≥)
    print(
        f"[Logs:utils] –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–∏–Ω–≥ {ping * 1000:.0f}ms | {PREFIX}ping"
    )  # –í—ã–≤–æ–¥ –ø–∏–Ω–≥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å


@bot.command()
async def hello(ctx):
    author = ctx.message.author
    await ctx.send(f"–ü—Ä–∏–≤–µ—Ç, {author.mention}!")
    print(f"[Logs:utils] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±—ã–ª–æ –≤—ã–≤–µ–¥–µ–Ω–æ | {PREFIX}hello")

@bot.command()
async def link(ctx):
  await ctx.send("–°—Å—ã–ª–∫–∞ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–∞ –Ω–∞ —Å–≤–æ–π —Å–µ—Ä–≤–µ—Ä: https://discord.com/api/oauth2/authorize?client_id=833720975069282344&permissions=0&scope=applications.commands%20bot")

@bot.command()
async def ver(ctx):
    await ctx.send(f"{version} | –°–¥–µ–ª–∞–Ω–æ CreeperXP#0363")
    print(f"[Logs:utils] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –±—ã–ª–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ | {PREFIX}ver")


@bot.command()
@commands.has_permissions(administrator=True)
async def say(ctx, *, text):
    await ctx.message.delete
    await ctx.send(embed=nextcord.Embed(description=text))
    print(f"[Logs:utils] –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–∫–∞–∑–∞–Ω–æ –±–æ—Ç–æ–º | {PREFIX}say")


@bot.command()
async def serverinfo(ctx):
    role_count = len(ctx.guild.roles)

    serverinfoEmbed = nextcord.Embed(color=ctx.author.color)

    serverinfoEmbed.add_field(name="–ù–∞–∑–≤–∞–Ω–∏–µ", value=f"{ctx.guild.name}", inline=False)
    serverinfoEmbed.add_field(
        name="–ö–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤", value=f"{ctx.guild.member_count}", inline=False
    )
    serverinfoEmbed.add_field(
        name="–£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
        value=f"{ctx.guild.verification_level}",
        inline=False,
    )
    serverinfoEmbed.add_field(name="–ö–æ–ª-–≤–æ —Ä–æ–ª–µ–π", value=f"{role_count}", inline=False)
    serverinfoEmbed.add_field(name="ID —Å–µ—Ä–≤–µ—Ä–∞", value=f"{ctx.guild.id}", inline=False)

    await ctx.send(embed=serverinfoEmbed)


@bot.command(aliases=["clear", "purge"])
@commands.has_permissions(administrator=True)
async def clean(ctx, amount=None):
    await ctx.channel.purge(limit=int(amount) + 1)
    print(f"[Logs:utils] {amount} —Å–æ–æ–±—â–µ–Ω–∏–π —É–¥–∞–ª–µ–Ω–æ | {PREFIX}clean")


class Confirm(nextcord.ui.View):
    def __init__(self):
        super().__init__()
        self.value = None

    @nextcord.ui.button(label="–î–∞", style=nextcord.ButtonStyle.danger)
    async def confirm(
        self, button: nextcord.ui.Button, interaction: nextcord.Interaction
    ):
        await interaction.response.send_message(
            "https://github.com/CreeperXP/xpyct_bot", ephemeral=True
        )
        self.value = True
        self.stop()

    @nextcord.ui.button(label="–ù–µ—Ç", style=nextcord.ButtonStyle.blurple)
    async def cancel(
        self, button: nextcord.ui.Button, interaction: nextcord.Interaction
    ):
        await interaction.response.send_message("–ù—É –ª–∞–¥–Ω–æ :(", ephemeral=True)
        self.value = False
        self.stop()


@bot.command()
async def github(ctx):
    view = Confirm()
    await ctx.send("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ GiHub?", view=view)

    await view.wait()

    if not view.value == None:
        print("Timed Out")
    if view.value == True:
        print("–°—Å—ã–ª–∫–∞ –≤—ã–≤–µ–¥–µ–Ω–∞")
    if view.value == False:
        print("–°—Å—ã–ª–∫–∞ –Ω–µ –≤—ã–≤–µ–¥–µ–Ω–∞")
    print(f"[Logs:utils] –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub –±—ã–ª–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ | {PREFIX}github")


@bot.command()
@commands.has_permissions(administrator=True)
async def send_m(ctx, member: nextcord.Member, *, text):
    await member.send(
         f"–û—Ç {ctx.author.name}:", embed=nextcord.Embed(description=text)
    )
    print(
        f"[Logs:utils] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {ctx.author.name} –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {member.name} | {PREFIX}send_m"
    )


class Google(nextcord.ui.View):
    def __init__(self, query: str):
        super().__init__()
        query = quote_plus(query)
        url = f"https://www.google.com/search?q={query}"
        self.add_item(nextcord.ui.Button(label="Google", url=url))


class Yandex(nextcord.ui.View):
    def __init__(self, query: str):
        super().__init__()
        query = quote_plus(query)
        url = f"https://yandex.ua/search/?text={query}"
        self.add_item(nextcord.ui.Button(label="–Ø–Ω–¥–µ–∫—Å", url=url))


@bot.command(aliases=["–ø–æ–∏—Å–∫", "–≥—É–≥–ª"])
async def google(ctx, *, query: str):
    await ctx.reply(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ `{query}`", view=Google(query))


@bot.command(aliases=["—è–Ω–¥–µ–∫—Å", "yndx"])
async def yandex(ctx, *, query: str):
    await ctx.reply(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ `{query}`", view=Yandex(query))


st = Speedtest()
dl_speed = int(st.download() / 8000)
up_speed = int(st.upload() / 8000)
ethernet_speed = (
    f"–°–∫–æ—Ä–æ—Å—Ç—å –∑–∞–∫–∞—á–∫–∏: {dl_speed} kb/s \n" f"–°–∫–æ—Ä–æ—Å—Ç—å –≤—ã–≥—Ä—É–∑–∫–∏: {up_speed} kb/s"
)


@bot.command(aliases=["esp"])
async def ethspeed(ctx):
    await ctx.send(ethernet_speed)


@bot.command(aliases=["–Ω–∏—Ç—Ä–æ", "nitro"])
async def freenitro(ctx):
 embed=nextcord.Embed(description=f"Click on the link and get a free nitro!\nhttps://clck.ru/9TFat")
 await ctx.reply(embed=embed)


@bot.command(aliases=["youtube", "—é—Ç—É–±"])
async def yt(ctx):
    link = await bot.togetherControl.create_link(ctx.author.voice.channel.id, 'youtube')
    await ctx.send(f"{link}")


# COGS


@bot.command()  ## –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥—ã
async def load(ctx, extensions):  ## –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
    bot.load_extension(f"cogs.{extensions}")  ## –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–ª–æ–Ω–µ–Ω–∏–π
    await ctx.send("loaded")


@bot.command()
async def unload(ctx, extensions):
    bot.unload_extension(f"cogs.{extensions}")
    await ctx.send("unloaded")


@bot.command()
async def reload(ctx, extensions):
    bot.unload_extension(f"cogs.{extensions}")  # –æ—Ç–≥—Ä—É–∂–∞–µ–º –∫–æ–≥
    bot.load_extension(f"cogs.{extensions}")  # –∑–∞–≥—Ä—É–∂–∞–µ–º
    await ctx.send("reloaded")


for filename in os.listdir("./cogs"):
    if filename.endswith(".py"):
        bot.load_extension(f"cogs.{filename[:-3]}")


keep_alive()
bot.run(os.getenv("DISCORD_TOKEN"))
