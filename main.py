from webserver import keep_alive
import os
import nextcord
from nextcord.ext import commands
import json
import requests
import random
import asyncio
from urllib.parse import quote_plus
import youtube_dl
from dotenv import load_dotenv


load_dotenv()


PREFIX = "$"
bot = commands.Bot(command_prefix=PREFIX, description="Hi")
bot.remove_command("help")


version = "Bot v2.1"

@bot.event
async def on_ready():
	print(f"Bot logged as {bot.user} | {version}")
	await bot.change_presence(status=nextcord.Status.online,activity=nextcord.Game("$help"))


@bot.command()
async def help(ctx):
	await ctx.send(
	    f"**My commands**: {PREFIX}help | {PREFIX}ping | {PREFIX}clear | {PREFIX}hello | {PREFIX}github | {PREFIX}ver | {PREFIX}say | {PREFIX}serverinfo | {PREFIX}clean | {PREFIX}send_m | **Games**: $guess, $headortails | **Music**: $play, $join, $leave"
	)
	print(
	    f"[Logs:utils] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–∞—Ö –±–æ—Ç–∞ –±—ã–ª–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ | {PREFIX}help"
	)


@bot.command(aliases=[
    "Ping",
    "PING",
    "pING",
    "ping",
    "–ü–∏–Ω–≥",
    "–ü–ò–ù–ì",
    "–ø–ò–ù–ì",
    "–ø–∏–Ω–≥",
    "–ü–æ–Ω–≥",
    "–ü–û–ù–ì",
    "–ø–û–ù–ì",
    "–ø–æ–Ω–≥",
])
async def __ping(
    ctx,
):  # –û–±—ä—è–≤–ª–µ–Ω–∏–µ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ __ping —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
	ping = bot.ws.latency  # –ü–æ–ª—É—á–∞–µ–º –ø–∏–Ω–≥ –∫–ª–∏–µ–Ω—Ç–∞

	ping_emoji = "üü©üî≥üî≥üî≥üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –º–µ–Ω—å—à–µ 100ms

	if ping > 0.10000000000000000:
		ping_emoji = "üüßüü©üî≥üî≥üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 100ms

	if ping > 0.15000000000000000:
		ping_emoji = "üü•üüßüü©üî≥üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 150ms

	if ping > 0.20000000000000000:
		ping_emoji = "üü•üü•üüßüü©üî≥"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 200ms

	if ping > 0.25000000000000000:
		ping_emoji = "üü•üü•üü•üüßüü©"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 250ms

	if ping > 0.30000000000000000:
		ping_emoji = "üü•üü•üü•üü•üüß"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 300ms

	if ping > 0.35000000000000000:
		ping_emoji = "üü•üü•üü•üü•üü•"  # –≠–º–æ—Ü–∏—è –ø–∏–Ω–≥–∞, –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ 350ms

	message = await ctx.send(
	    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ. . ."
	)  # –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è message —Å –ø–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
	await message.edit(
	    content=f"–ü–æ–Ω–≥! {ping_emoji} `{ping * 1000:.0f}ms` :ping_pong:"
	)  # –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ –∏—Ç–æ–≥–æ–≤–æ–µ (–ù–∞ —Å–∞–º –ø–∏–Ω–≥)
	print(
	    f"[Logs:utils] –ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø–∏–Ω–≥ {ping * 1000:.0f}ms | {PREFIX}ping"
	)  # –í—ã–≤–æ–¥ –ø–∏–Ω–≥–∞ –≤ –∫–æ–Ω—Å–æ–ª—å


@bot.command()
async def hello(ctx):
	author = ctx.message.author
	await ctx.send(f"–ü—Ä–∏–≤–µ—Ç, {author.mention}!")
	print(f"[Logs:utils] –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –±—ã–ª–æ –≤—ã–≤–µ–¥–µ–Ω–æ | {PREFIX}hello")


@bot.command()
async def ver(ctx):
	await ctx.send(f"{version} | –°–¥–µ–ª–∞–Ω–æ CreeperXP#0363")
	print(f"[Logs:utils] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ –±—ã–ª–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ | {PREFIX}ver")


@bot.command()
async def say(ctx, *, text):
	await ctx.message.delete()
	author = ctx.message.author
	username = author.name
	develop = "CreeperXP"
	if username == develop:
		await ctx.message.delete()
		await ctx.send(embed=nextcord.Embed(description=text))
		print(f"[Logs:utils] –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ—Å–∫–∞–∑–∞–Ω–æ –±–æ—Ç–æ–º | {PREFIX}say")
	else:
		await ctx.send("–¢—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞!")

@bot.command()
async def time(ctx):
	await ctx.send(f"{ctime}")
	print(f"[Logs:utils] –í—Ä–µ–º—è –±—ã–ª–æ –≤—ã–≤–µ–¥–µ–Ω–æ: {ctime} | {PREFIX}time")


@bot.command()
async def serverinfo(ctx):
	role_count = len(ctx.guild.roles)

	serverinfoEmbed = nextcord.Embed(color=ctx.author.color)

	serverinfoEmbed.add_field(name="–ù–∞–∑–≤–∞–Ω–∏–µ",
	                          value=f"{ctx.guild.name}",
	                          inline=False)
	serverinfoEmbed.add_field(name="–ö–æ–ª-–≤–æ —é–∑–µ—Ä–æ–≤",
	                          value=f"{ctx.guild.member_count}",
	                          inline=False)
	serverinfoEmbed.add_field(
	    name="–£—Ä–æ–≤–µ–Ω—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏",
	    value=f"{ctx.guild.verification_level}",
	    inline=False,
	)
	serverinfoEmbed.add_field(name="–ö–æ–ª-–≤–æ —Ä–æ–ª–µ–π",
	                          value=f"{role_count}",
	                          inline=False)
	serverinfoEmbed.add_field(name="ID —Å–µ—Ä–≤–µ—Ä–∞",
	                          value=f"{ctx.guild.id}",
	                          inline=False)

	await ctx.send(embed=serverinfoEmbed)


@bot.command()
async def userinfo(ctx, user: nextcord.User):
	user_id = user.id
	username = user.name
	avatar = user.avatar.url
	await ctx.send(f"ID: {user_id} | NICK: {username}\n{avatar}")
	print(
	    f"[Logs:utils] –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {username} –±—ã–ª–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ | {PREFIX}userinfo"
	)


@bot.command(aliases = ['clear', 'purge'])
async def clean(ctx, amount=None):
	await ctx.channel.purge(limit=int(amount) + 1)
	print(f"[Logs:utils] {amount} —Å–æ–æ–±—â–µ–Ω–∏–π —É–¥–∞–ª–µ–Ω–æ | {PREFIX}clean")


class Confirm(nextcord.ui.View):
	def __init__(self):
		super().__init__()
		self.value = None

	@nextcord.ui.button(label="–î–∞", style=nextcord.ButtonStyle.danger)
	async def confirm(self, button: nextcord.ui.Button,
	                  interaction: nextcord.Interaction):
		await interaction.response.send_message(
		    "https://github.com/CreeperXP/xpyct_bot", ephemeral=True)
		self.value = True
		self.stop()

	@nextcord.ui.button(label="–ù–µ—Ç", style=nextcord.ButtonStyle.blurple)
	async def cancel(self, button: nextcord.ui.Button,
	                 interaction: nextcord.Interaction):
		await interaction.response.send_message("–ù—É –ª–∞–¥–Ω–æ :(", ephemeral=True)
		self.value = False
		self.stop()


@bot.command()
async def github(ctx):
	view = Confirm()
	await ctx.send("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ GiHub?", view=view)

	await view.wait()

	if not view.value == None:
		print("Timed Out")
	if view.value == True:
		print("–°—Å—ã–ª–∫–∞ –≤—ã–≤–µ–¥–µ–Ω–∞")
	if view.value == False:
		print("–°—Å—ã–ª–∫–∞ –Ω–µ –≤—ã–≤–µ–¥–µ–Ω–∞")
	print(f"[Logs:utils] –°—Å—ã–ª–∫–∞ –Ω–∞ GitHub –±—ã–ª–∞ –≤—ã–≤–µ–¥–µ–Ω–∞ | {PREFIX}github")


@bot.command()
async def send_m(ctx, member: nextcord.Member, *, text):
	await ctx.message.delete()
	author = ctx.message.author
	user_name = author.name
	develop = "CreeperXP"
	if user_name == develop:
		await member.send(f"–û—Ç {ctx.author.name}:",
		                  embed=nextcord.Embed(description=text))
		print(
		    f"[Logs:utils] –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {ctx.author.name} –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {member.name} | {PREFIX}send_m"
		)
	else:
		await ctx.send("–¢—ã –Ω–µ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–æ—Ç–∞!")
		time.sleep(7)
		await ctx.message.delete()


@bot.command()
async def mute(ctx):
	await ctx.send(file=nextcord.File("leopold-vd.mp4"))


class Google(nextcord.ui.View):
    def __init__(self, query: str):
        super().__init__()
        query = quote_plus(query)
        url = f'https://www.google.com/search?q={query}'
        self.add_item(nextcord.ui.Button(label='Google', url=url))


class Yandex(nextcord.ui.View):
    def __init__(self, query: str):
        super().__init__()
        query = quote_plus(query)
        url = f'https://yandex.ua/search/?text={query}'
        self.add_item(nextcord.ui.Button(label='–Ø–Ω–¥–µ–∫—Å', url=url))


@bot.command(aliases = ["–ø–æ–∏—Å–∫", "–≥—É–≥–ª"])
async def google(ctx, *, query: str):
    await ctx.reply(f'–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ `{query}`', view=Google(query))


@bot.command(aliases = ['—è–Ω–¥–µ–∫—Å', "yndx"])
async def yandex(ctx, *, query: str):
    await ctx.reply(f'–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∑–∞–ø—Ä–æ—Å–∞ `{query}`', view=Yandex(query))


#COGS


@bot.command()  ## –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –∫–æ–º–º–∞–Ω–¥—ã
async def load(ctx, extensions):  ## –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏
	bot.load_extension(f'cogs.{extensions}')  ## –∑–∞–≥—Ä—É–∑–∫–∞ –¥–æ–ø–ª–æ–Ω–µ–Ω–∏–π
	await ctx.send("loaded")


@bot.command()
async def unload(ctx, extensions):
	bot.unload_extension(f"cogs.{extensions}")
	await ctx.send('unloaded')


@bot.command()
async def reload(ctx, extensions):
	bot.unload_extension(f"cogs.{extensions}")  # –æ—Ç–≥—Ä—É–∂–∞–µ–º –∫–æ–≥
	bot.load_extension(f"cogs.{extensions}")  # –∑–∞–≥—Ä—É–∂–∞–µ–º
	await ctx.send('reloaded')


for filename in os.listdir("./cogs"):
	if filename.endswith(".py"):
		bot.load_extension(f"cogs.{filename[:-3]}")

keep_alive()
bot.run(os.getenv("DISCORD_TOKEN"))
